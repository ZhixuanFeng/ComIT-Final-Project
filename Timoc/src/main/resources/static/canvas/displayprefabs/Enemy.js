let enemyPositions = [{x:240, y:96}, {x:240, y:128}, {x:240, y:160}, {x:240, y:192}];

// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.1 (Phaser v2.6.2)


/**
 * Enemy.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function Enemy(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType, posNum, enemyInfo) {

	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);

	this.info = enemyInfo;

    let shadow = this.game.add.sprite(8.0, 15.0, 'entity', 'shadow', this);
    shadow.scale.setTo(1, 1);
    shadow.anchor.setTo(0.5);
    this.sprite = this.game.add.sprite(8.0, 8.0, 'entity', enemyInfo.name.toLowerCase(), this);
    this.sprite.anchor.setTo(0.5);
    if (this.sprite.width > 16) shadow.scale.setTo(1.5, 1.0);

    this.scale.setTo(2, 2);

    this.position.setTo(enemyPositions[posNum].x * this.scale.x, enemyPositions[posNum].y * this.scale.y);
}

/** @type Phaser.Group */
let Enemy_proto = Object.create(Phaser.Group.prototype);
Enemy.prototype = Enemy_proto;
Enemy.prototype.constructor = Enemy;

/* --- end generated code --- */
// -- user code here --

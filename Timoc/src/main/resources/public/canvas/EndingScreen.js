
// -- user code here --
function screenFadeIn() {
    let fadeInTween = this.game.add.tween(this).to( { alpha: 1.0 }, 1500, Phaser.Easing.Linear.None, true);
    fadeInTween.onComplete.add(processNextMessage);
}

/* --- start generated code --- */

// Generated by  1.5.1 (Phaser v2.6.2)


/**
 * EndingScreen.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function EndingScreen(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType, ending) {

	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);

	this.ending = ending;

    this.background = this.game.add.sprite(0.0, 0.0, 'map', ending + 'endbackground', this);
    this.title = this.game.add.sprite(0.0, 0.0, 'map', ending + 'endtitle', this);

    this.scale.setTo(2.0);
    this.alpha = 0.0;
}

/** @type Phaser.Group */
let EndingScreen_proto = Object.create(Phaser.Group.prototype);
EndingScreen.prototype = EndingScreen_proto;
EndingScreen.prototype.constructor = EndingScreen;

/* --- end generated code --- */
// -- user code here --
EndingScreen.prototype.fadeIn = screenFadeIn;